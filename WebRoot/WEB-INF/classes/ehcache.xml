<ehcache>
    <!-- 如果缓存内存溢出，则存储到硬盘空间 -->
    <diskStore path="java.io.tmpdir"/>

   <!-- 
   		maxElementsInMemory="10000"   			:内存支持的最大对象的数量
        eternal="false"							:对象是否永久生效，建议为false，这样下面的两个参数才会有效
        timeToIdleSeconds="60" 					:对象的间隔周期，默认单位为秒(如果60s内没有访问这个对象，那么就销毁)
        timeToLiveSeconds="120"					:对象的生命周期，默认单位为秒(不管访问对象多么频繁，120s后销毁)
        overflowToDisk="true"					:是否支持溢出到硬盘，建议为true
        memoryStoreEvictionPolicy="LRU"			:对象的替换策略:FIFO(先进先出)  LRU(最近最少被访问,时间策略),  LFU(最近最未使用算法，频率策略)
        										 FIFO:此算法已经被淘汰
        										 LRU:时间优先，会忽略访问频率
        										 LFU:频率优先，会忽略访问时间
    -->
    <!-- 测试1：测试内存中对象数量
    <defaultCache
            maxElementsInMemory="6"
            eternal="true"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            overflowToDisk="false"
            memoryStoreEvictionPolicy="FIFO"
            /> -->
            
     <defaultCache
            maxElementsInMemory="1000"
            eternal="false"
            timeToIdleSeconds="60"
            timeToLiveSeconds="120"
            overflowToDisk="true"
            memoryStoreEvictionPolicy="LFU"
            />
</ehcache>
